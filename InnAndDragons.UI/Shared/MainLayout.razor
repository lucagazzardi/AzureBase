
@inherits LayoutComponentBase
@using System.Globalization
@using Blazorise.Localization

<Layout Sider="true">
    <LayoutSider>
        <LayoutSiderContent>
            <Bar Breakpoint="Breakpoint.Desktop" NavigationBreakpoint="Breakpoint.Tablet" ThemeContrast="ThemeContrast.Dark"
                 Mode="BarMode.VerticalInline" CollapseMode="BarCollapseMode.Small">
                <BarToggler />
                <BarBrand>
                    <BarItem>
                        <BarLink To="">
                            <BarIcon  IconName="@("fa-dragon")" />
                            Inn & Goblins
                        </BarLink>
                    </BarItem>
                </BarBrand>
                <BarMenu>
                    <BarStart>                        
                        <BarItem>
                            <BarLink Style="background-color:#001529" To="">
                                <BarIcon IconName="IconName.Dashboard" />
                                Dashboard
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink Style="background-color:#001529" To="/players">
                                <BarIcon IconName="IconName.User" />
                                Giocatori
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink Style="background-color:#001529" To="/characters">
                                <BarIcon IconName="IconName.ShieldAlt" />
                                Personaggi
                            </BarLink>
                        </BarItem>
                    </BarStart>                    
                </BarMenu>
            </Bar>
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutContent Padding="Padding.Is4.OnX">
            @Body
        </LayoutContent>
    </Layout>
</Layout>

@code{
    [Inject] protected ITextLocalizerService LocalizationService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await SelectCulture("en-US");

        await base.OnInitializedAsync();
    }

    Task SelectCulture(string name)
    {
        LocalizationService.ChangeLanguage(name);

        return Task.CompletedTask;
    }

    void OnThemeEnabledChanged(bool value)
    {
        if (Theme == null)
            return;

        Theme.Enabled = value;

        Theme.ThemeHasChanged();
    }

    void OnGradientChanged(bool value)
    {
        if (Theme == null)
            return;

        Theme.IsGradient = value;

        //if ( Theme.GradientOptions == null )
        //    Theme.GradientOptions = new GradientOptions();

        //Theme.GradientOptions.BlendPercentage = 80;

        Theme.ThemeHasChanged();
    }

    void OnRoundedChanged(bool value)
    {
        if (Theme == null)
            return;

        Theme.IsRounded = value;

        Theme.ThemeHasChanged();
    }

    void OnThemeColorChanged(string value)
    {
        if (Theme == null)
            return;

        if (Theme.ColorOptions == null)
            Theme.ColorOptions = new ThemeColorOptions();

        if (Theme.BackgroundOptions == null)
            Theme.BackgroundOptions = new ThemeBackgroundOptions();

        if (Theme.TextColorOptions == null)
            Theme.TextColorOptions = new ThemeTextColorOptions();

        Theme.ColorOptions.Primary = value;
        Theme.BackgroundOptions.Primary = value;
        Theme.TextColorOptions.Primary = value;

        if (Theme.InputOptions == null)
            Theme.InputOptions = new ThemeInputOptions();

        //Theme.InputOptions.Color = value;
        Theme.InputOptions.CheckColor = value;
        Theme.InputOptions.SliderColor = value;

        Theme.ThemeHasChanged();
    }

    private bool topbarVisible = false;
    private bool uiElementsVisible = true;

    [CascadingParameter] protected Theme Theme { get; set; }

    RenderFragment customIcon =@<img src="/brand-logo.png" style="width:32px; height: 32px" />;
}