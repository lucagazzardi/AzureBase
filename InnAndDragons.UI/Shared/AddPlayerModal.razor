@using Microsoft.Extensions.Configuration;

@inject HttpClient Http;
@inject IConfiguration Configuration;

<Modal @ref="modalRef">
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Crea un giocatore</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel Style="font-weight:bold">Nome</FieldLabel>
                <TextEdit @bind-Text="@newPlayer.name" Placeholder="Nome..." />
            </Field>
            <Field>
                <FieldLabel Style="font-weight:bold">Email</FieldLabel>
                <TextEdit @bind-Text="@newPlayer.email" Placeholder="Email..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="(() => HideModal(false))">Annulla</Button>
            <Button Color="Color.Primary" Clicked="(() => HideModal(true))">Aggiungi</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {

    private Player newPlayer { get; set; }

    private Modal modalRef;

    [Parameter]
    public EventCallback OnPlayerAdd { get; set; }

    protected override void OnInitialized()
    {
        newPlayer = new Player();
    }

    public void ShowModal()
    {
        modalRef.Show();
    }

    public async Task HideModal(bool isConfirmed)
    {
        if (isConfirmed)
        {            
            await Http.PostAsJsonAsync<Player>(string.Concat(Configuration["AzureUrl"], $"api/player/create"), newPlayer);
            await OnPlayerAdd.InvokeAsync();
        }
        modalRef.Hide();
    }

}
